generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String   @db.Uuid
  car_id           String   @db.Uuid
  start_time       DateTime @db.Timestamp(6)
  end_time         DateTime @db.Timestamp(6)
  pickup_location  String   @db.VarChar(255)
  dropoff_location String   @db.VarChar(255)
  booking_status   String   @db.VarChar(20)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  car              car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car {
  id                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  model               String        @db.VarChar(100)
  manufacturer        String        @db.VarChar(100)
  year_of_manufacture Int
  color               String        @db.VarChar(20)
  registration_number String        @unique @db.VarChar(20)
  company_id          String        @db.Uuid
  availability_status Boolean
  created_at          DateTime      @default(now()) @db.Timestamp(6)
  updated_at          DateTime      @default(now()) @db.Timestamp(6)
  booking             booking[]
  company             company       @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  maintenance         maintenance[]
  review              review[]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  city        String?  @db.VarChar(100)
  country     String?  @db.VarChar(100)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  car         car[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model maintenance {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  car_id             String   @db.Uuid
  maintenance_date   DateTime @db.Timestamp(6)
  description        String   @db.VarChar(255)
  cost               Int
  maintenance_status String   @db.VarChar(20)
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  car                car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  car_id      String   @db.Uuid
  rating      Int
  comment     String?  @db.VarChar(255)
  review_date DateTime @db.Timestamp(6)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  car         car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  company     company[]
  review      review[]
}
